;*****************************************
;     MDA-Win8086 EXPERIMENT PROGRAM    *
;     FILENAME  : ADC.ASM
;     PROCESSOR : I8086
;     VOLT METER
;*****************************************

CODE	SEGMENT
	ASSUME	CS:CODE,DS:CODE,ES:CODE,SS:CODE
	;
AD_C	EQU	18H
	;
LCDC	EQU	00H
LCDC_S	EQU	02H
LCDD	EQU	04H
	;	
	ORG	1000H
	;
	CALL	ALLCLR
	MOV	SI,OFFSET DATA
	CALL	STRING
	;
L2:	XOR	AL,AL
	OUT	AD_C,AL
	;
	CALL	TIMER
	;
	IN	AL,AD_C
	;
	CALL	CON_VOLT
	;
	CALL	DISP_V
	JMP	L2
	;
	; INPUT = DX
DISP_V:	MOV	AH,0C0H+4
	CALL	LNXX
	;
	MOV	AH,DH
	AND	AH,0F0H
	MOV	CL,4
	SHR	AH,CL
	CALL	H_A1
	;
	MOV	AH,'.'
	CALL	CHAROUT
	;
	MOV	AH,DH
	AND	AH,0FH
	CALL	H_A1
	;
	MOV	AH,DL
	CALL	H_A
	;
	MOV	AH,' '
	CALL	CHAROUT
	;
	MOV	AH,'['
	CALL	CHAROUT
	;
	MOV	AH,'V'
	CALL	CHAROUT
	;
	MOV	AH,']'
	CALL	CHAROUT
	RET
	;
	;
	; IN =AL OUT =DX			
CON_VOLT:
	PUSH	AX
	AND	AX,00F0H
	MOV	DI,OFFSET H_TAB
	;
	MOV	CL,4
	SHR	AL,CL
	;
	ADD	AL,AL
	ADC	AH,0
	ADD	DI,AX
	MOV	DH,BYTE PTR CS:[DI]
	INC	DI
	MOV	DL,BYTE PTR CS:[DI]
	;
	POP	AX
	AND	AX,000FH
	MOV	DI,OFFSET L_TAB
	;
	ADD	AL,AL
	ADC	AH,0
	ADD	DI,AX
	MOV	AH,BYTE PTR CS:[DI]
	INC	DI
	MOV	AL,BYTE PTR CS:[DI]
	;
	ADD	AL,DL
	DAA
	MOV	DL,AL
	;
	MOV	AL,AH
	ADD	AL,DH
	DAA
	MOV	DH,AL
	RET
	;
L_TAB:	DB	00H,00H
	DB	0,20H
	DB	0,40H
	DB	0,60H
	DB	0,80H
	DB	01H,00H
	DB	01H,20H
	DB	01H,40H
	DB	01H,60H
	DB	01H,80H
	DB	02H,00H
	DB	02H,20H
	DB	02H,40H
	DB	02H,60H
	DB	02H,80H
	DB	03H,00H
	;
H_TAB:	DB	0,0
	DB	03H,20H ;0.320V
	DB	06H,40H
	DB	09H,60H
	DB	12H,80H
	DB	16H,00H
	DB	19H,20H
	DB	22H,40H
	DB	25H,60H
	DB	28H,80H
	DB	32H,00H
	DB	35H,20H
	DB	38H,40H
	DB	41H,60H
	DB	44H,80H
	DB	48H,00H  ; 4.8V
	;
DATA:	DB	'  Volt Meter',00H
	;		
	;		
	; LCD instruction
ALLCLR:	MOV	AH,01H
	JMP	LNXX
	;
LN21:	MOV	AH,0C0H
LNXX:	CALL	BUSY
	MOV	AL,AH
	OUT	LCDC,AL
	RET
	; busy flag check
BUSY:	IN	AL,LCDC_S
	AND	AL,10000000B
	JNZ	BUSY
	RET
	;
	; 1 char. LCD OUT 
	; AH = out data
CHAROUT:
	CALL	BUSY
	;
	MOV	AL,AH
	OUT	LCDD,AL
	RET
	;
STRING:	MOV	AH,BYTE PTR CS:[SI]
	CMP	AH,00H
	JE	STRING1
	; out
	CALL	BUSY
	CALL	CHAROUT
	INC	SI
	JMP	STRING
STRING1:
  	RET
	;		
	; 1 byte data LCD out
	; INPUT DATA AH
H_A     PROC	NEAR
	PUSH	AX
	ROR	AH,1
	ROR	AH,1
	ROR	AH,1
	ROR	AH,1
	CALL	H_A1 ; high digit lcd out
	POP	AX
	CALL	H_A1 ; low digit lcd out
	RET
H_A	ENDP
	;				
H_A1    PROC	NEAR
	PUSH	BX
	MOV	BX,OFFSET ASCTBL
	AND	AH,0FH
	ADD	BL,AH
	JNC	H_A2
	INC	BH
H_A2:	MOV 	AH,CS:[BX]
	CALL	CHAROUT
	POP	BX
	RET
	;
ASCTBL	DB	'0123456789'
H_A1	ENDP

TIMER: 	MOV	CX,0
TIMER1:	NOP
	NOP
	NOP
	NOP
	LOOP	TIMER1
	RET
	;
CODE	ENDS
	END
